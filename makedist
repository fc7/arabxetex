#!/bin/bash

if [ "$1" = "-h" ]; then 
echo "usage: makedist [option]"
echo "Option -m forces generating the mappings"
exit 0
fi

mapcount=`ls mappings/*.tec 2> /dev/null | wc -w`

if [ "$1" = "-m" -o ! -d mappings -o $mapcount = 0 ]; then
perl makemaps.pl
fi

mapsdir="dist/fontmapping/"
docdir="dist/doc/"
srcdir="dist/source/"
texdir="dist/xelatex/"
locmapsdir="loc/fonts/misc/xetex/fontmapping/arabxetex/"
locdocdir="loc/doc/xelatex/arabxetex/"
locsrcdir="loc/source/xelatex/arabxetex/"
loctexdir="loc/tex/xelatex/"

mkdir -p $locmapsdir
mkdir -p $locdocdir/examples
mkdir -p $locsrcdir
mkdir -p $loctexdir
mkdir -p $mapsdir
mkdir -p $docdir/examples
mkdir -p $srcdir
mkdir -p $texdir

cp mappings/*.{map,tec} $mapsdir
mv mappings/*.{map,tec} $locmapsdir
rm -rf mappings/


echo "Recompile arabxetex.dtx? [y/N]"
read -en 1 RECOMPILE_Q
if [ "$RECOMPILE_Q" = "y" ] || [ "$RECOMPILE_Q" = "Y" ]; then
	xelatex arabxetex.dtx
	xelatex arabxetex.dtx
	xelatex arabxetex.dtx
fi

cp *-trans*.map $srcdir 
cp *.maps $srcdir
cp makemaps.pl $srcdir
cp arabxetex.pdf $docdir
cp arabxetex.dtx $srcdir
cp ednotes_example.{tex,pdf} $docdir/examples
cp minimal.tex $docdir/examples
cp arabxetex.sty $texdir
cp README.txt dist/

cp *-trans*.map $locsrcdir 
cp *.maps $locsrcdir
cp makemaps.pl $locsrcdir
cp arabxetex.pdf $locdocdir
cp arabxetex.dtx $locsrcdir
cp ednotes_example.{tex,pdf} $locdocdir/examples
cp minimal.tex $locdocdir/examples
cp arabxetex.sty $loctexdir
cp README.txt $locdocdir

[ -f arabxetex.zip ] && mv arabxetex.zip arabxetex.zip.bak
cd dist
zip -r arabxetex.zip *
mv arabxetex.zip ../
cd ..
rm -fr dist/

echo "arabxetex.zip can be uploaded on CTAN..."

[ -f arabxetex-local.zip ] && mv arabxetex-local.zip arabxetex-local.zip.bak
cd loc
zip -r arabxetex-local.zip *
mv arabxetex-local.zip ../
cd ..
rm -fr loc/

echo "Install to /opt/texlive/texmf-local ? [y/N]"
read -en 1 INSTALL_Q
if [ "$INSTALL_Q" = "y" ] || [ "$INSTALL_Q" = "Y" ]; then
	unzip -uo arabxetex-local.zip -d /opt/texlive/texmf-local/ 
	texconfig-sys rehash
fi

echo "update completed"
